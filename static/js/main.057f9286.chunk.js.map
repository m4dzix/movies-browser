{"version":3,"sources":["common/Tile/images/Vector.svg","features/PopularMovies/Video.svg","images/search.svg","images/camera.svg","GlobalStyle.js","common/Pagination/styled.js","common/Pagination/index.js","common/Main/style.js","common/Main/index.js","common/Section/style.js","common/Section/index.js","common/Tile/style.js","common/Tile/index.js","features/PopularMovies/styled.js","features/PopularMovies/moviesSlice.js","features/PopularMovies/index.js","styled.js","App.js","serviceWorker.js","theme.js","features/PopularMovies/getApi.js","features/PopularMovies/moviesSaga.js","rootSaga.js","store.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","colors","whisper","Container","styled","div","Button","button","pattensBlue","scienceBlue","mistic","waterloo","breakpoints","mobileMax","Text","span","black","inPages","css","Pages","Pagination","disabled","StyledMain","main","Main","children","section","tablet","Header","h2","Section","title","body","white","Poster","img","silver","Content","DetailsContainer","Title","h3","Year","p","Tags","ul","VoteContainer","li","VoteAverage","strong","VoteCount","Tile","year","type","imagePath","voteAverage","voteCount","src","alt","starIcon","Tag","moviesSlice","createSlice","name","initialState","loading","movies","genres","reducers","fetchPopularMovies","state","fetchPopularMoviesSuccess","payload","results","fetchPopularMoviesError","fetchGenres","fetchGenresSuccess","fetchGenresError","actions","selectMoviesState","selectPopularMovies","selectGenres","selectLoading","PopularMovies","useSelector","popularMovies","movieGenres","dispatch","useDispatch","useEffect","map","movie","key","id","release_date","split","genre_ids","genreId","filter","item","poster_path","video","vote_average","vote_count","NavContainer","NavContent","StyledNavLink","NavLink","attrs","activeClassName","ListItem","LinkContainer","InputContainer","Input","input","LogoContainer","StyledImg","camera","to","search","placeholder","path","Boolean","window","location","hostname","match","getPopularMovies","a","fetch","response","ok","Error","statusText","json","getMovieGenres","arrayGenre","fetchPopularMoviesHandler","fetchGenresHandler","watchFetchPopularMovies","delay","call","put","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesReducer","middleware","run","ReactDOM","render","StrictMode","mercury","snuff","candlelight","woodsmoke","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.057f9286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.5ac444e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Video.27ea078a.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.bdbe6d07.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.726b97db.svg\";","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle` \n  html {\n    box-sizing: border-box;\n  }\n  *, ::after, ::before{\n    box-sizing: inherit;\n    }\n  body {\n    font-family: 'Poppins', sans-serif;\n    background-color: ${({ theme }) => theme.colors.whisper};\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n\n    padding: 8px 0px 0px 16px;\n`;\n\nexport const Button = styled.button`\n    border-radius: 5px;\n    margin: 0 6px;\n    padding: 8px 16px;\n    border: none;\n    background-color: ${({theme}) => theme.colors.pattensBlue};\n    color: ${({theme}) => theme.colors.scienceBlue};\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n\n    &:disabled {\n        background-color: ${({theme}) => theme.colors.mistic};\n        color: ${({theme}) => theme.colors.waterloo};\n    }  \n\n    @media (max-width: ${({theme}) => theme.breakpoints.mobileMax}px){\n        margin: 0 4px;\n        padding: 7.5px 12px;\n    }\n`;\n\nexport const Text = styled.span`\n    color: ${({theme}) => theme.colors.black};\n    padding: 0 8px;\n\n    ${({ inPages }) => inPages && css`\n        color: ${({theme}) => theme.colors.waterloo};\n        font-weight: normal;\n    `};\n\n    @media (max-width: ${({theme}) => theme.breakpoints.mobileMax}px){\n        padding: 0 2px;\n    }\n`;\n\nexport const Pages = styled.span`\n    margin: 12px;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n\n    @media (max-width: ${({theme}) => theme.breakpoints.mobileMax}px){\n        margin: 4px;\n        font-size: 10px;\n    }\n`;","import React from \"react\";\nimport { Container, Button, Pages, Text} from \"./styled\";\n\n\nconst Pagination = () => {\n\n    //tmp Data, also disabled state added to 2 buttons for preview\n    const currentPage = 7;\n    const maxPages = 100;\n    const isMobile = true;\n\n    return(\n        <Container>\n            <Button disabled>{isMobile ? <>&#60;&#60;</> : <>&#60; <Text>First</Text></>}</Button>\n            <Button disabled>{isMobile ? <>&#60;</> : <>&#60; <Text>Previous</Text></>}</Button>\n            <Pages>\n                <>\n                    <Text inPages>Page</Text> {currentPage} <Text inPages>of</Text> {maxPages} \n                </>\n            </Pages>\n            <Button>{isMobile ? <>&#62;</> : <><Text>Next</Text> &#62;</>}</Button>\n            <Button>{isMobile ? <>&#62;&#62;</> : <><Text>First</Text> &#62;</>}</Button>\n        </Container>\n    );\n};\n\nexport default Pagination;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\n\nimport { StyledMain } from \"./style\";\n\nconst Main = ({ children }) => <StyledMain>{children}</StyledMain>;\nexport default Main;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  grid-template-columns: repeat(4, 324px);\n  grid-gap: 24px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}px) {\n    grid-template-columns: repeat(2, 324px);\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Header = styled.h2`\n  font-weight: 600;\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 18px;\n  }\n`;\n","import React from \"react\";\nimport { Header, Container } from \"./style\";\n\nconst Section = ({ title, body }) => (\n  <section>\n    <Header>{title}</Header>\n    <Container>{body}</Container>\n  </section>\n);\nexport default Section;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 324px;\n  height: 650px;\n  padding: 16px;\n  background: ${({ theme }) => theme.colors.white};\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\n  border-radius: 5px;\n  display: grid;\n  grid-gap: 8px;\n  grid-template-rows: auto 1fr;\n  background-color: ${({ theme }) => theme.colors.white};\n  align-items: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    width: 288px;\n    height: auto;\n    grid-template-columns: auto 1fr;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 292px;\n  height: 434px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.silver};\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    width: 114px;\n    height: 169px;\n  }\n`;\nexport const Content = styled.div`\n  display: grid;\n  align-items: start;\n  justify-items: start;\n  align-self: stretch; ;\n`;\nexport const DetailsContainer = styled.div`\n  align-self: start;\n`;\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 130%;\n  margin: 0;\n  margin-bottom: 8px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 16px;\n  }\n`;\nexport const Year = styled.p`\n  font-size: 16px;\n  line-height: 150%;\n  margin: 0;\n  margin-bottom: 8px;\n  color: ${({ theme }) => theme.colors.waterloo};\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 13px;\n  }\n`;\n\nexport const Tags = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n`;\nexport const Tag = styled.li`\n  font-size: 14px;\n  line-height: 140%;\n  background-color: ${({ theme }) => theme.colors.mistic};\n  border-radius: 5px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  padding: 8px 16px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 10px;\n    line-height: 110%;\n    padding: 4px 8px;\n  }\n`;\nexport const VoteContainer = styled.div`\n  align-self: end;\n  display: flex;\n  align-items: center;\n`;\n\nexport const VoteAverage = styled.strong`\n  font-weight: 600;\n  font-size: 16px;\n  margin: 0 12px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 13px;\n  }\n`;\nexport const VoteCount = styled.span`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 13px;\n  }\n`;\n","import React from \"react\";\nimport {\n  Container,\n  Poster,\n  Content,\n  DetailsContainer,\n  Title,\n  Year,\n  Tags,\n  VoteContainer,\n  VoteAverage,\n  VoteCount,\n} from \"./style\";\nimport starIcon from \"./images/Vector.svg\";\n\nconst Tile = ({ title, year, type, imagePath, voteAverage, voteCount }) => {\n  return (\n    <Container>\n      <Poster src={imagePath} alt={\"\"} />\n      <Content>\n        <DetailsContainer>\n          <Title>{title}</Title>\n          <Year>{year}</Year>\n          <Tags>{type}</Tags>\n        </DetailsContainer>\n        <VoteContainer>\n          <img src={starIcon} alt={\"star\"}></img>\n          <VoteAverage>{voteAverage}</VoteAverage>\n          <VoteCount>{voteCount} votes</VoteCount>\n        </VoteContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Tile;\n","import styled from \"styled-components\";\n\nexport const Tag = styled.li`\n  font-size: 14px;\n  line-height: 140%;\n  background-color: ${({ theme }) => theme.colors.mistic};\n  border-radius: 5px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  padding: 8px 16px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    font-size: 10px;\n    line-height: 110%;\n    padding: 4px 8px;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    loading: true,\n    movies: [],\n    genres: [],\n  },\n  reducers: {\n    fetchPopularMovies: (state) => {\n      state.loading = true;\n    },\n    fetchPopularMoviesSuccess: (state, { payload: movies }) => {\n      state.movies = movies.results;\n      state.loading = false;\n    },\n    fetchPopularMoviesError: (state) => {\n      state.loading = false;\n    },\n    fetchGenres: (state) => {\n      state.loading = true;\n    },\n    fetchGenresSuccess: (state, { payload: genres }) => {\n      state.genres = genres;\n      state.loading = false;\n    },\n    fetchGenresError: (state) => {\n      state.loading = false;\n    },\n  },\n});\nexport const {\n  fetchPopularMovies,\n  fetchPopularMoviesSuccess,\n  fetchPopularMoviesError,\n  fetchGenres,\n  fetchGenresSuccess,\n  fetchGenresError,\n} = moviesSlice.actions;\nexport const selectMoviesState = (state) => state.movies;\nexport const selectPopularMovies = (state) => selectMoviesState(state).movies;\nexport const selectGenres = (state) => selectMoviesState(state).genres;\nexport const selectLoading = (state) => selectMoviesState(state).loading;\n\nexport default moviesSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport Main from \"../../common/Main\";\nimport Section from \"../../common/Section\";\nimport Tile from \"../../common/Tile\";\nimport video from \"./Video.svg\";\nimport { Tag } from \"./styled\";\nimport {\n  fetchPopularMovies,\n  fetchGenres,\n  selectLoading,\n  selectPopularMovies,\n  selectGenres,\n} from \"./moviesSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst PopularMovies = () => {\n  const loading = useSelector(selectLoading);\n  const popularMovies = useSelector(selectPopularMovies);\n  const movieGenres = useSelector(selectGenres);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPopularMovies());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchGenres());\n  }, [dispatch]);\n\n  const type = (genreId) =>\n    movieGenres\n      .filter((item) => item.id === genreId)\n      .map((genres) => genres.name);\n\n  if (!loading && popularMovies) {\n    return (\n      <Main>\n        <Section\n          title={\"Popular movies\"}\n          body={popularMovies.map((movie) => (\n            <Tile\n              key={movie.id}\n              title={movie.title}\n              year={movie.release_date.split(\"-\")[0]}\n              type={movie.genre_ids.map((id) => (\n                <Tag key={id}>{type(id)}</Tag>\n              ))}\n              imagePath={\n                !!movie.poster_path\n                  ? `https://images.tmdb.org/t/p/w185/${movie.poster_path}`\n                  : video\n              }\n              voteAverage={movie.vote_average}\n              voteCount={movie.vote_count}\n            ></Tile>\n          ))}\n        ></Section>\n      </Main>\n    );\n  } else if (loading) {\n    return <div>LOADING LOADING LOADING</div>;\n  } else {\n    return <div>ERROR ERROR </div>;\n  }\n};\nexport default PopularMovies;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst activeClassName = \"active\";\n\nexport const NavContainer = styled.div`\n    background-color: ${({ theme }) => theme.colors.black};\n    display:flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    height: 94px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        height: 142px;\n        flex-wrap: wrap;\n    }\n`;\n\nexport const NavContent = styled.div`\n    display: flex;\n    flex-wrap: no-wrap;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\n    activeClassName,\n}))`\n    &.${activeClassName}{\n        border: 1px solid ${({ theme }) => theme.colors.white};\n        border-radius: 24px;\n    }\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.white};\n    font-weight: 600;\n    font-size: 14px;\n    text-transform: uppercase;\n    padding: 13.5px 24px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        font-size: 12px;\n        padding: 8px 12px;\n        \n    }\n\n`;\n\nexport const ListItem = styled.li`\n    list-style: none;\n`;\n\nexport const LinkContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        margin: 32px 16px;\n    }\n`;\n\nexport const InputContainer = styled.div`\n    border-radius: 24px;\n    background-color: ${({ theme }) => theme.colors.white};\n    margin: 24px 0 24px 24px;\n    padding-left: 26px;\n    width: 432px;\n    height: 48px;\n    display:flex;\n    align-items: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        margin: 0 16px 16px 16px;\n        padding-left: 18px;\n    }\n`;\n\nexport const Input = styled.input`\n    font-size: 16px;\n    line-height: 150%;\n    border: none;\n    padding-left: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        font-size: 13px;\n        padding-left: 10px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 16px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        margin: 0 0;\n    }\n`;\n\nexport const StyledImg = styled.img`\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        height: 17px;\n        width: 17px;\n    }\n`;\n\nexport const Title = styled.span`\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 40px;\n    color: ${({ theme }) => theme.colors.white};\n    padding-left: 17px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px){\n        font-size: 13px;\n        padding-left: 8px;\n    }\n`;","import React from \"react\";\nimport Pagination from \"./common/Pagination\";\nimport PopularMovies from \"./features/PopularMovies\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { StyledNavLink, NavContainer, NavContent, Input, InputContainer, LogoContainer, Title, LinkContainer, StyledImg, ListItem } from \"./styled\";\nimport search from \"./images/search.svg\";\nimport camera from \"./images/camera.svg\";\n\nexport default () => (\n  <HashRouter>\n    <nav>\n      <NavContainer>\n        <NavContent>\n          <LogoContainer>\n            <StyledImg src={camera} alt=\"camera icon\" />\n            <Title>Movies Browser</Title>\n          </LogoContainer>\n          <LinkContainer>\n            <ListItem><StyledNavLink to=\"/popular-movies\">movies</StyledNavLink></ListItem>\n            <ListItem><StyledNavLink to=\"/popular-people\">people</StyledNavLink></ListItem>\n          </LinkContainer>\n        </NavContent>\n        <InputContainer>\n          <StyledImg src={search} alt=\"lens icon\" />\n          <Input\n            placeholder=\"Search for movies...\"\n          />\n        </InputContainer>\n      </NavContainer>\n    </nav>\n    <Switch>\n      <Route path=\"/popular-movies\">\n        <PopularMovies />\n    <Pagination />\n      </Route>\n      <Route path=\"/popular-people\">\n        <div>popular people</div>\n    <Pagination />\n      </Route>\n      <Route path=\"/\">\n        <Redirect to=\"/popular-movies\" />\n      </Route>\n    </Switch>\n  </HashRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const theme = {\n  colors: {\n    white: \"#FFF\",\n    mercury: \"#E5E5E5\",\n    whisper: \"#F5F5FA\",\n    mistic: \"#E4E6F0\",\n    snuff: \"#DDDDEE\",\n    pattensBlue: \"#D6E4FF\",\n    scienceBlue: \"#0044CC\",\n    candlelight: \"#FCD420\",\n    waterloo: \"#7E839A\",\n    silver: \"#C4C4C4\",\n    woodsmoke: \"#18181B\",\n    black: \"#000\",\n  },\n  breakpoints: {\n    tablet: 1025,\n    mobileMax: 767,\n  },\n};\n","export const getPopularMovies = async () => {\n  const api = `https://api.themoviedb.org/3/movie/popular?api_key=284d89d28528d0d1591b16fc44d13746&language=en-US&page=1`;\n  const response = await fetch(api);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  const popularMovies = await response.json();\n\n  return popularMovies;\n};\n\nexport const getMovieGenres = async () => {\n  const api = `https://api.themoviedb.org/3/genre/movie/list?api_key=284d89d28528d0d1591b16fc44d13746&language=en-US`;\n\n  const response = await fetch(api);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  const arrayGenre = await response.json();\n\n  return arrayGenre.genres;\n};\n","import { delay, call, put, takeEvery } from \"redux-saga/effects\";\nimport { getPopularMovies, getMovieGenres } from \"./getApi\";\nimport {\n  fetchPopularMovies,\n  fetchPopularMoviesSuccess,\n  fetchPopularMoviesError,\n  fetchGenres,\n  fetchGenresSuccess,\n  fetchGenresError,\n} from \"./moviesSlice\";\n\nfunction* fetchPopularMoviesHandler() {\n  try {\n    yield delay(100);\n    const movies = yield call(getPopularMovies);\n    yield put(fetchPopularMoviesSuccess(movies));\n  } catch (error) {\n    yield put(fetchPopularMoviesError());\n  }\n}\nfunction* fetchGenresHandler() {\n  try {\n    yield delay(100);\n    const genres = yield call(getMovieGenres);\n    yield put(fetchGenresSuccess(genres));\n  } catch (error) {\n    yield put(fetchGenresError());\n  }\n}\n\nexport function* watchFetchPopularMovies() {\n  yield takeEvery(fetchPopularMovies.type, fetchPopularMoviesHandler);\n  yield takeEvery(fetchGenres.type, fetchGenresHandler);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchFetchPopularMovies } from \"./features/PopularMovies/moviesSaga\";\n\nexport default function* rootSaga() {\n  yield all([watchFetchPopularMovies()]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport moviesReducer from \"./features/PopularMovies/moviesSlice\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: { movies: moviesReducer },\n  middleware: [sagaMiddleware],\n});\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { theme } from \"./theme\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}